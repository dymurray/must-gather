#!/bin/bash
source pwait

# Cluster passed in from main gather
cluster=$1
ns=$2
logs_since=$3
max_parallelism=$4

for pvb in $(oc get podvolumebackup --namespace $ns --no-headers | awk '{print $1}'); do
    backup=$(oc get podvolumebackup $pvb --namespace $ns -o jsonpath='{.spec.tags.backup}')
    node=$(oc get podvolumebackup $pvb --namespace $ns -o jsonpath='{.spec.node}')
    migplan=$(oc get backup $backup -o jsonpath='{.metadata.labels.migration\.openshift\.io/migplan-name}' --namespace $ns)
    migmigration=$(oc get backup $backup -o jsonpath='{.metadata.labels.migration\.openshift\.io/migmigration-name}' --namespace $ns)
    object_collection_path="/must-gather/migplans/migplan-${migplan}/migmigration-${migmigration}/backup-${backup}/pvb-${pvb}"
    mkdir -p ${object_collection_path}
    oc describe podvolumebackup ${pvb} --namespace ${ns} &> "${object_collection_path}/pvb-describe-${pvb}.txt" &
    for pod in $(oc get pods -o wide --field-selector spec.nodeName=${node} --selector name=restic --no-headers --namespace $ns | awk '{print $1}'); do
      echo "[cluster=${cluster}][ns=${ns}][pod=${pod}] Collecting Pod logs..."
      oc logs --all-containers --namespace ${ns} ${pod} --since ${logs_since} &> "${object_collection_path}/current.log" &
      echo "[cluster=${cluster}][ns=${ns}][pod=${pod}] Collecting previous Pod logs..."
      oc logs --previous --all-containers --namespace ${ns} ${pod} --since ${logs_since} &> "${object_collection_path}/previous.log" & 
      pwait $max_parallelism
    done
done

wait